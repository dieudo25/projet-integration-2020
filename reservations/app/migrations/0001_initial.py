# Generated by Django 3.0.4 on 2020-03-28 19:45

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=60)),
                ('lastname', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
                'db_table': 'artists',
            },
        ),
        migrations.CreateModel(
            name='Artist_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Artist')),
            ],
            options={
                'verbose_name': 'Artist_type',
                'verbose_name_plural': 'Artist_types',
                'db_table': 'artist_type',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(max_length=6, unique=True)),
                ('locality', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Locality',
                'verbose_name_plural': 'Localities',
                'db_table': 'localities',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('designation', models.CharField(max_length=60)),
                ('address', models.CharField(max_length=255, null=True)),
                ('website', models.URLField(max_length=255, null=True)),
                ('phone', models.CharField(max_length=30, null=True)),
                ('locality_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Locality')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
                'db_table': 'types',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=60)),
                ('firstname', models.CharField(max_length=60)),
                ('lastname', models.CharField(max_length=60)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('langue', models.CharField(max_length=2)),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Role')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('poster_url', models.CharField(max_length=255, null=True)),
                ('bookable', models.BooleanField()),
                ('price', models.FloatField()),
                ('description', models.TextField()),
                ('created_at', models.DateField(default=datetime.date.today, null=True)),
                ('location_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Location')),
            ],
            options={
                'verbose_name': 'Show',
                'verbose_name_plural': 'Shows',
                'db_table': 'shows',
            },
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Artist_type')),
                ('show_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Show')),
            ],
            options={
                'verbose_name': 'Collaboration',
                'verbose_name_plural': 'Collaborations',
                'db_table': 'artist_type_show',
            },
        ),
        migrations.AddField(
            model_name='artist_type',
            name='type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Type'),
        ),
    ]
